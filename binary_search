------------------------------------normal binary search---------------------------
        cin>>x;
        int l = 0,r = n-1;
        bool ok = false;
        while(l<=r){
            int m = (l+r)/2;
            if(a[m]==x) {
                ok = true;
                break;
                
            }
            else if(a[m]>x) r = m-1;
            else if(a[m]<x) l = m + 1;
            
        }
        if(ok) cout<<"YES"<<ln;
        else cout<<"NO"<<ln;
 
 -----------binary search to find Find the maximum element not greater than 𝑥(closest to the x on the left)--------------
    int x;
    	cin>>x;
    	int l = -1,r = n;
    	//bool ok = false;
    	while(l+1<r){
    		int m = (l+r)/2;
    		if(a[m]<=x) l = m;
    		else r = m;
    	
    	}
    	cout<<l+1<<ln;
      
-----------binary search to find Find the minimum element not smaller than 𝑥(closest to the x on the right)--------------
    int x;
    	cin>>x;
    	int l = -1,r = n;
    	while(l+1<r){
    		int m = (l+r)/2;
    		if(a[m]<x) l = m;
    		else r = m;
    	}
    	cout<<r+1<<ln;
 -----------------------binary search for answer-----------------------
 cin>>w>>h>>k;
	ll l = 0,r = 1;
	while(!good(r)) r*=2;
	while(l+1<r){
		ll m = (l+r)/2;
		if(good(m)) r = m;
		else l = m;
	}
	cout<<r;
  
  
  (we have to make a good function)...
    
